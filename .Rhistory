a <- 10 #example
a2 <- 100 #example
v <- sort(runif(1e7,0,1000));  #example
Rcpp::cppFunction('int min_index(NumericVector v, double a) {
NumericVector::iterator low=std::lower_bound (v.begin(), v.end(), a);
return (low - v.begin() + 1);
}')
Rcpp::cppFunction('int max_index(NumericVector v, double a) {
NumericVector::iterator up=std::upper_bound (v.begin(), v.end(), a);
return (up - v.begin());
}')
min(which(v>a))
min_index(v,a)
max(which(v<a2))
max_index(v,a2)
v <- sort(runif(1e7,0,1000));  #example
min(which(v>a))
min_index(v,a)
max(which(v<a2))
max_index(v,a2)
findInterval(a,v)
findInterval(a2,v)
min(which(v>a))
min_index(v,a)
findInterval(a,v)
max(which(v<a2))
max_index(v,a2)
findInterval(a2,v)
min(which(v>a))
min_index(v,a)
findInterval(a,v)
max(which(v<a2))
max_index(v,a2)
findInterval(a2,v)
findInterval(a,v, all.inside=TRUE)
min(which(v>=a))
min_index(v,a)
findInterval(a,v)
library(roxigen2)
library(roxygen2)
setwd("/home/fgischuu/git/REPPlab")
setwd("/home/fischuu/git/REPPlab")
roxygenise()
roxygenise()
?match.arg
library(REPPlab)
REPPlabAgg
library(REPPlab)
EPPlabAgg(x)
getwd()
setwd("/home/ejo138/Projects/fischuu.github.io/lectures/IntroductionToR")
titanic <- read.table("data/titanic3.csv", sep=",", header=TRUE)
stress <- read.table("data/stressEcho.csv", sep=",", header=TRUE)
head(titanic)
mean(titanic$age)
mean(titanic$age, na.rm=TRUE)
sum(titanic$survived)
head(stress)
min(stress$bhr)
max(stress$bhr)
range(stress$bhr)
sd(stress$age)
stress$basebp
stress$basebp>150
(stress$basebp[1:20]>150) & (stress$sex[1:20]=="male")
head(stress)
(stress$basebp[1:20]>150) && (stress$sex[1:20]=="male")
(stress$basebp[1:20]>150) & (stress$sex[1:20]=="male")
(stress$basebp[1:20]>150) & (stress$gender[1:20]=="male")
(stress$basebp[1:40]>150) & (stress$gender[1:40]=="male")
stress[(stress$basebp[1:40]>150) & (stress$gender[1:40]=="male") ,]
stress[which((stress$basebp[1:40]>150) & (stress$gender[1:40]=="male")) ,]
stress[(stress$basebp>150) & (stress$gender=="male"),]
stress[(stress$basebp>170) & (stress$gender=="male"),]
stress[(stress$basebp>190) & (stress$gender=="male"),]
titanic
head(titanic)
seq(from=10,1500,10)
titanic[seq(from=10,1500,10),]
titanic[seq(from=10,1300,10),]
nrow(titanic)
head(titanic)
titanic$survived[titanic$sex=="female",]
titanic$survived[titanic$sex=="female"]
sum(titanic$survived[titanic$sex=="female"])
sum(titanic$survived[titanic$sex=="male"])
head(stress)
stress$hxofCig[stress$gender=="male"]
head(stress)
head(titanic)
stress$age
stress$age>70
sum(stress$age>70)
seq(from=2, to=100, by=2)
stress$age
stress$age>70
sum(stress$age>70)
sum(titanic$survived[titanic$sex=="female"])
sum(titanic$survived[titanic$sex=="male"])
install.packages("MASS")
library("MASS")
summary(stress$age)
boxplot(stress$age)
head(stress)
plot(stress$bhr, stress$basebp)
plot(stress$bhr, stress$age)
plot(stress$bhr, stress$maxhr)
?boxplot
titanic$fare
summary(titanic$fare)
head(titanic)
plot(titanic$fare, titanic$age)
plot(titanic$fare, titanic$ticket)
plot(titanic$fare, as.numeric(titanic$ticket))
as.numeric(titanic$ticket)
titanic$ticket
plot(titanic$fare, titanic$age)
head(stress)
mean(stress$age)
t.test(stress$age, mu=65)
t.test(stress$age, mu=60)
t.test(stress$age, mu=50)
t.test(stress$age, mu=67)
t.test(stress$age, mu=65)
t.test(stress$age, mu=6)
t.test(stress$age, mu=65)
t.test(stress$age, mu=65)
head(titanic)
plot(titanic$age, titanic$survived)
titanic$age
table(titanic$age,titanic$survived)
